Learning concepts:
* tiny types
* app service
* repository
* parse don't validate
* chicago test
* kysely

Saved HTTP requests for curl, httpie

* Minimal deps philosophy
* Extract route
* extract error handling
* domain article type and tiny types
* tdd repository
* use repository
* extract service
* clock
* parse
* update workflow

* db migration
* generate types
* sql repository
* sql repository integration tests
* contract for repo
* sql repo injection
* config abstraction
* composition root for module
* clean DB
* stop db
* feature driven arch
* optimistic concurrency
* transactions
* favorites - separate models - emit event created
* internal read model for favorites
* read model single article with favorites
* read model all articles
* parse read model, robustness principle
* PRG pattern and redirects
* list all tags behind a feature flag
* hypermedia, centralized links
* business rules
* event log
* domain logic: fav articles longer than 100 chars and with at least one tag
* GH action
* Dockerfile (https://nodejs.org/en/docs/guides/nodejs-docker-webapp)


Prerequisites:
* Node.js 16+
* postgres (info how to run from docker)
* postgres client (I will use pgAgmin)

TODO:
* prepare links to files with longer content
* send prerequistes list
* set mocha options with exit